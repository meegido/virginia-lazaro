.blur {
  filter: blur(5px) grayscale(10%);
}

.contrast {
  filter: brightness(90%);
  filter: contrast(400%);
}

.saturate {
  filter: saturate(500%);
}

.hue {
  filter: hue-rotate(270deg);
}

.invert {
  filter: invert(100%);
}

@mixin info($direction, $align) {
  display: flex;
  flex-direction: $direction;
  justify-content: $align;
}

@mixin each($num) {
  &:nth-child(#{$num}n) {
    @content
  }
}

.article {
  .article-header {
    border-bottom: 1px solid black;
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    align-items: center;

    .article-category {
      font-size: 1.2em;
      margin: .2em 0;
    }

    .media {
      margin-bottom: .2em;
    }
  
  }
  
  .article-title {
    margin-top: .2em;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: flex-end;

    .title {
      margin: 0;
    }

    .date {
      margin: 0.2em;
    }
  }

  .article-image {
    background-size: cover;
    background-repeat: no-repeat;
    border-radius: 0.2em;
    padding-top: 75%;
  }
}

@media only screen and (min-width: 25em) and (orientation: landscape) {
  .articles {
    display: grid;
    grid-gap: 4em;
    grid-template-columns: repeat(2, 1fr);

  }
}

@media (min-width: 48em) and (orientation: portrait) {
  .articles {
    display: grid;
    grid-gap: 4em;
    grid-template-columns: repeat(2, 1fr);

  }
}

@media (min-width: 90em) {
  .articles {
    grid-template-columns: repeat(2, minmax(auto, 1fr));
    grid-template-rows: minmax(3, minmax(auto, 1fr));
    grid-auto-columns: minmax(auto-fill, auto);
    grid-auto-rows: max-content;
    grid-auto-flow: row dense;
    grid-column-gap: 2em;

    .article {
      $width: 80%, 100%, 100%, 75%, 80%, 100%, 90%, 100%, 90%;
      $height: 16%, 50%, 60%, 16%, 50%, 100%;
      $justify: start, end, end, end, start, end, start, end, end;
      
      @for $i from 1 through length($width) {
        &:nth-child(#{length($width)}n+#{$i}) {
            width: nth($width, $i)
        }
      }
      @for $i from 1 through length($height) {
        &:nth-child(#{length($height)}n+#{$i}) {
            height: nth($height, $i)
        }
      }

      @for $i from 1 through length($justify) {
        &:nth-child(#{length($justify)}n+#{$i}) {
          justify-self: nth($justify, $i)
        }
      }
      
    }

    .article {
      @include each(3) {
        .article-content {
          display: flex;
          flex-direction: row;
          justify-content: space-between;
          padding-top: 1em;
          .image-container {
            width: 100%;
            height: 100%;
            .article-image {
              background-size: cover;
              background-repeat: no-repeat;
              border-radius: 0.2em;
              padding-top: 75%;
            }
          }
          .excerpt {
            width: 100%;
            margin-top: 0;
            padding-left: 2em;
          }
        }
      }
    }

    .article {
      @include each(4) {
        .article-content {
          display: flex;
          flex-direction: column-reverse;
          justify-content: space-between;
          .image-container {
            width: 100%;
            height: 100%;
            .article-image {
              background-size: cover;
              background-repeat: no-repeat;
              border-radius: 0.2em;
              padding-top: 75%;
            }
          }
          .excerpt {
            width: 100%;
          }
        }
      }
    }

    .article:nth-child(2) {
      .article-content {
        display: flex;
        flex-direction: row-reverse;
        justify-content: space-between;
        padding-top: 1em;
        .image-container {
          width: 100%;
          height: 100%;
          .article-image {
            background-size: contain;
            background-repeat: no-repeat;
            border-radius: 0.2em;
            padding-top: 120%;
          }
        }
        .excerpt {
          width: 100%;
          padding-right: 3em;
        }
      }
    }
  }
}
